Цель игры:
    Возможны 2 варианта: найти сокровище, выбраться из лабиринта.

Процесс игры
    В процессе игры игрок имеет возможность совершать 4 вида действий:
        1. Переходить из комнаты в комнату.
        2. Брать предметы в комнатах.
        3. Оставлять предметы в комнатах.
        4. Воздействовать на интерактивные объекты в комнатах.

Более детально про разные действия:
    1. В любой момент игры игрок может запросить список комнат, в которые есть путь из текущей комнаты, и сменить
        свое положение на одну из этих комнат.
    2. В любой момент игры игрок может запросить список объектов, которые доступны для того, чтобы взять их. Далее
        он может попровать положить их в свой инвентарь. Если в инвентаре есть место, то предмет будет перемещен из
        комнаты в сумку игрока.
    3. В любой момент игры игрок может попробовать оставить предмет в комнате. Если в комнате есть подходящее место,
        предмет будет перемещен из сумки игрока в комнату.
    4. В любой момент игры игрок может запросить список интерактивных объектов в текущей комнате. Далее он может
        попробовать провзаимодействовать с ними, используя 0 или более предметов из своего инвентаря. Предметы могут
        быть как расходные (в этом случае они удаляются из инвентаря игрока), так и нерасходные (в этом случае они
        остаются в инвентаре). По результатам действия в комнате обновляется список доступных вещей, переходов и
        интерактивных объектов.

Под капотом:
    Комната Room: комната представляет собой структуру, содержащую следующие поля и методы:
        1. Массив дверей в соседние комнаты (о них ниже) (rooms []*Doors).
        2. Массив слотов под предметы (о них ниже) (slots []Slot).
        3. Массив интерактивных объектов (о них ниже) (interactiveObjects []*InteractiveObjects).

    Дверь Door: представляет собой структуру, содержающу следующие поля и методы:
        1. isOpen bool: флаг показывает, открыта ли данная дверь.
        2. room1 *Room: указатель на первую комнату, на границе которой стоит дверь.
        3. room2 *Room: указатель на вторую комнату, на границе которой стоит дверь.
        4. func (door *Door) Enter(player *Player) error.
            В случае, если дверь открыта и пользователь находится в одной из комнат, на границе которых стоит дверь,
            пользватель перемещается в другую комнату.

    Слот Slot: слот представляет собой структуру, содержащую следующие поля и методы:
        1. Флаг доступа (bool): показывает, открыт ли данный слот (isOpen bool).
        2. Content *Item (о нем ниже) - предмет, лежащий в данном слоте.
        2. func (slot *Slot) Move(anotherSlot *Slot) (message str, err error).
            Метод перемещает объект объект из слота anotherSlot в slot, если это возможно, и сообщает о проделанной
            работе (вариант сообщения: "Item 'sword' moved to the box"). В случае невозможности перемещения
            возвращается ошибка (вариант ошибки: "errors.New("Can not move item 'elefant' to the small box")).

    Интерактивный объект InteractiveObject: представляет собой структуру, содержащую следующие методы и поля:
        1. Комната room *Room: комната, в которой находится данный объект.
        2. Флаг accessible bool: показывает, доступен ли объект для взаимоедйствия.
        2. func Interact(args []string, items []*Item) (message str, err error)
            args - массив аргументов для взаимодействия (например, код от сейфа);
            items - массив предметов, которые будут использованы в данном действии.
            В случае, если функции были переданы валидные аргументы и предметы, он производит действие, которое в
            общем случае меняет состояние открытости дверей и слотов, а также состояние доступности интерактивных
            объектов.

    Игрок Player: представляет собой структуру, содержающую следующие поля (насчет методов не уверен):
        1. Имя name string.
        2. Сумка bag *Bag (о ней ниже).
        3. Комната room *Room - комната, в которой находится игрок.

    Сумка Bag: представляет собой структуру, содержащую следующие поля и методы:
        1. Слоты slots []Slot - слоты, в которые можно положить предмет Item.
        2. func (bag *Bag) put(slot *Slot) (message string, err error)
            Функция аналогична функции Slot.Move.

    Предмет Item: представляет собой структуру, содержащую следующие поля:
        1. Name string
        2. Description string
        3. Size int
